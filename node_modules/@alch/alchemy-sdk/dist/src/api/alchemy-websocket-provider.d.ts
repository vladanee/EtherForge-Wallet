import { Listener } from '@ethersproject/abstract-provider';
import { AlchemyEventType } from '../types/types';
import { EthersEvent } from '../internal/internal-types';
import { CommunityResourcable, WebSocketProvider } from '@ethersproject/providers';
export declare class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {
    _events: Array<EthersEvent>;
    readonly apiKey: string;
    /**
     * Overridden implementation of ethers' that includes Alchemy based subscriptions.
     *
     * @param eventName Event to subscribe to
     * @param listener The listener function to call when the event is triggered.
     * @override
     * @public
     */
    on(eventName: AlchemyEventType, listener: Listener): this;
    /** @override */
    destroy(): Promise<void>;
    /**
     * Overrides the ether's `isCommunityResource()` method. Returns true if the
     * current api key is the default key.
     *
     * @override
     */
    isCommunityResource(): boolean;
}
