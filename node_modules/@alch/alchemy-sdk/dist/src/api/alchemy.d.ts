import { AlchemyConfig, Network } from '../types/types';
import { AlchemyProvider } from './alchemy-provider';
import { AlchemyWebSocketProvider } from './alchemy-websocket-provider';
/**
 * Entry point into the Alchemy SDK.
 *
 * @param config - Configuration object for the Alchemy SDK
 * @public
 */
export declare function initializeAlchemy(config?: AlchemyConfig): Alchemy;
/**
 * The Alchemy SDK client. This class holds config information and must be
 * passed into SDK methods.
 *
 * Do not call this constructor directly. Instead, use {@link initializeAlchemy}
 * to get an instance of the SDK.
 *
 * @public
 */
export declare class Alchemy {
    readonly apiKey: string;
    network: Network;
    readonly maxRetries: number;
    /**
     * Changes the network that the SDK requests data from.
     *
     * @param network - The network to change to.
     * @public
     */
    setNetwork(network: Network): void;
    /**
     * Creates an AlchemyProvider instance. Only one provider is created per
     * Alchemy instance.
     *
     * @public
     */
    getProvider(): AlchemyProvider;
    /**
     * Creates an AlchemyWebsocketProvider instance. Only one provider is created
     * per Alchemy instance.
     *
     * @public
     */
    getWebsocketProvider(): AlchemyWebSocketProvider;
}
